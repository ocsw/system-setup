# shellcheck shell=sh

#
# This is a pseudo shell script.
#
# DON'T RUN THIS LIKE AN ACTUAL SCRIPT!
# SELECT THE RELEVANT BITS AND RUN THEM FROM THE COMMAND LINE
#

# see also dot.bash_profile.d/java.pre.sh and dot.bashrc.d/java.post.sh in
# https://github.com/ocsw/dotfiles

#
# Mac
#
umask 022
brew update
brew install --cask oracle-jdk  # latest; installed with maven anyway
brew tap homebrew/cask-versions
brew install --cask corretto8  # for Java SE JDK 8; password required
brew install --cask corretto11  # for Java SE JDK 11; password required
brew install --cask corretto17  # for Java SE JDK 17; password required
brew install --cask corretto  # for latest Java SE JDK; password required
brew install jenv
brew install maven
umask 077
jenv enable-plugin export
jenv enable-plugin maven
# note: Corretto comes before any Oracle, so e.g. "1.8" gets Corretto, not
# Oracle
for i in /Library/Java/JavaVirtualMachines/*/Contents/Home/; do
    jenv add "$i"
done
jenv global DEFAULT_VERSION
# restart the shell to get JAVA_HOME

if ! grep '^\.java-version$' ~/.gitignore_global > /dev/null 2>&1; then
    echo '.java-version' >> ~/.gitignore_global
fi

# upgrades might require removing old versions and adding new ones; if all the JDKs are in the same place, you can do this to remove all current versions:
for i in $(jenv versions | grep -v system | tr '*' ' ' | sed 's/(.*//'); do
    jenv remove "$i"
done
# then the jenv add loop above, and then update any .java-version files

#
# Ubuntu (old/incomplete)
#
# download from:
# https://www.oracle.com/technetwork/java/javase/downloads/jdk11-downloads-5066655.html
umask 022
mkdir -p /usr/lib/jdk
tar xzf ~/Downloads/jdk-11.0.1_linux-x64_bin.tar.gz -C /usr/lib/jdk
export JAVA_HOME=/usr/lib/jdk/jdk-11.0.XXX
export PATH=$PATH:$JAVA_HOME/bin
# and add to your dotfiles
apt-get install libc6-i386
update-alternatives --install /usr/bin/java java \
    /usr/lib/jdk/jdk-11.0.1/bin/java 1
update-alternatives --config java
# rest TBA
umask 077
