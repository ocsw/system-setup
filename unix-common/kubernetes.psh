# shellcheck shell=sh

#
# This is a pseudo shell script.
#
# DON'T RUN THIS LIKE AN ACTUAL SCRIPT!
# SELECT THE RELEVANT BITS AND RUN THEM FROM THE COMMAND LINE
#

#
# Mac
#
umask 022
# for GKE, gcloud's kubectl is recommended, but brew's is needed to install
# the other brew packages
#gcloud components install kubectl
brew update
brew install kubernetes-cli
brew install fzf
brew install kubectx
brew tap johanhaleby/kubetail && brew install kubetail
brew install stern
brew install kube-ps1
brew install --cask minikube
brew tap robscott/tap && brew install robscott/tap/kube-capacity
brew install argoproj/tap/kubectl-argo-rollouts
umask 077
# install https://k8slens.dev/

#
# GKE update
#
gke_up () {  # can use gke-up in bash
    # get credentials for all clusters
    # (probably want to remove the production filter)
    # note: final sh is $0, then xargs adds $1 and $2
    # shellcheck disable=SC2016
    gcloud container clusters list \
        --project=PROJECT_NAME \
        --filter="resourceLabels[env]=production" \
        --format="value[delimiter=' '](name,zone)" \
    | xargs -n 2 sh -c \
        'gcloud container clusters get-credentials $1 --region=$2 --project=PROJECT_NAME' \
        sh
}

#
# GKE lists
#
gke_contexts () {  # can use gke-contexts in bash
    # get all locally-configured contexts
    kubectl config get-contexts | tail -n +2 | awk '{print $2}'
}
gke_clusters () {  # can use gke-clusters in bash
    # get all clusters
    # (probably want to remove the production filter)
    gcloud container clusters list --project=gke-xpn-1 \
        --filter="resourceLabels[env]=production" --format="value(name)"
}
